{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Online C++ compiler to run C++ program online\
#include <iostream>\
#include <stdexcept>\
using namespace std;\
\
//3D  ARRAY\
int main()\
\{\
    int depth = 2;\
    int row = 3; \
    int col = 4;\
    \
    //allocate memory for 3D array\
    int*** arr = new int**[depth];\
    for(int i = 0; i< depth; i++)\
    \{\
        arr[i] = new int*[row];\
        for(int j =0; j< row; j++)\
        \{\
            arr[i][j] = new int[col];\
        \}\
    \}\
    \
    //initilize\
    for(int i=0; i< depth; i++)\
    \{\
        for(int j = 0; j< row; j++)\
        \{\
            for(int k =0; k< col; k++)\
            \{\
                arr[i][j][k] = i* row * col+ j *col +k;\
                cout<< arr[i][j][k] << " ";\
            \}\
            cout<<endl;\
        \}\
    \}\
    \
    //deallocate memory\
    for(int i =0; i< depth; i++)\
    \{\
        for(int j=0; j< row; j++)\
        \{\
            delete[] arr[i][j];\
        \}\
        delete[] arr[i];\
    \}\
    delete[] arr;\
    \
    return 0;\
\}\
\
/*\
//2D dynamic array using pointer to pointer\
int main()\
\{\
    int row =3;\
    int col = 4;\
    //allocate memory\
    int **arr = new int*[row];  //pointer to array of pointers\
    for(int i =0; i< row; i++)\
    \{\
        arr[i] = new int[col];\
    \}\
    \
    //initialize array\
    for (int i=0; i< row; i++)\
    \{\
        for (int j =0; j< col; j++)\
        \{\
            arr[i][j] = i* col + j;\
            cout<< arr[i][j] << " ";\
        \}\
        cout<< endl;\
    \}\
    \
    //deallocate memory\
    for(int i=0; i< row; i++)\
    \{\
        delete[] arr[i];\
    \}\
    delete[] arr;\
    return 0;\
\}*/\
\
/*int main()\
\{\
    //2D matrix with 3 rows and 4 columns\
    int arr[3][4] = \{\
        \{1, 2, 3, 4\},\
        \{30,40,5,60\},\
        \{11, 23, 35, 46\}\
    \};\
    for(int row = 0; row< 3; row++)\
    \{\
        for(int col =0; col<4; col++)\
        \{\
            cout<<arr[row][col];\
        \}\
        cout<<endl;\
    \}\
    \
    return 0;\
\}*/}